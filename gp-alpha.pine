// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © chanphillip6152

//@version=5
strategy("GP Testing Strategy", overlay=true, initial_capital=10000, default_qty_type=strategy.percent_of_equity, default_qty_value=100, commission_type=strategy.commission.cash_per_contract, commission_value=0.005)

i_ma1 = input.int(title="EMA 1 Length", defval=5, step=1, group="Strategy Parameters", tooltip="Short-term EMA")
i_ma2 = input.int(title="EMA 2 Length", defval=20, step=1, group="Strategy Parameters", tooltip="Long-term EMA")
i_volumeMa = input.int(title="Volume EMA Length", defval=20, step=1, group="Strategy Parameters", tooltip="Volume EMA")
i_buyVolume = input.float(title="Buy Volume %", defval=80, step=1, group="Strategy Parameters", tooltip="Volume Condition to Buy (% Volume EMA)")
// i_lowerClose = input.bool(title="Exit on Lower Close", defval=false, group="Strategy Parameters", tooltip="Wait for a lower-close before exiting above MA2")
i_acceptableLossPercent = input.float(title="Acceptable Loss %", defval=0, step=10, group="Strategy Parameters", tooltip="Acceptable Loss Percent (only sell when loss more than this)")
i_stopPercent = input.float(title="Stop Loss %", defval=10, step=1, group="Strategy Parameters", tooltip="Failsafe Stop Loss Percent Decline")
i_buyCross3Up = input.bool(title="Buy Condition: 3 cont up when crossing", defval=true, group="Strategy Parameters", tooltip="3 continuous up when EMA1 > EMA2")

i_startTime = input.time(title="Start Filter", defval=timestamp("01 Jan 1990 00:00 +0000"), group="Time Filter", tooltip="Start Date")
i_endTime = input.time(title="End Filter", defval=timestamp("01 Jan 2099 00:00 +0000"), group="Time Filter", tooltip="End Date")

ma1 = ta.ema(close, i_ma1)
ma2 = ta.ema(close, i_ma2)

f_dateFilter = time >= i_startTime and time <= i_endTime

// check buy/sell condition
var float buyPrice = 0
volumeMA = ta.ema(volume, i_volumeMa)
acceptableStopPrice = strategy.position_size > 0 ? buyPrice - (buyPrice * i_acceptableLossPercent / 100) : na
buyCondition = ma1 > ma2 and volume > volumeMA * i_buyVolume / 100
               and (not i_buyCross3Up or (i_buyCross3Up and close[2] > open[2] and close[1] > open[1] and close[0] > open[0] and ((ma1[3] < ma2[3] and ma1[2] > ma2[2]) or (ma1[2] < ma2[2] and ma1[1] > ma2[1]) or (ma1[1] < ma2[1] and ma1[0] > ma2[0]))))
               and strategy.position_size == 0 and f_dateFilter
sellCondition = strategy.position_size > 0 and ma1 < ma2 and (close > buyPrice or close < acceptableStopPrice)
stopDistance = strategy.position_size > 0 ? ((buyPrice - close) / close) : na
stopPrice = strategy.position_size > 0 ? buyPrice - (buyPrice * i_stopPercent / 100) : na
stopCondition = strategy.position_size > 0 and stopDistance > i_stopPercent / 100

// enter positions
if buyCondition
    strategy.entry(id="Long", direction=strategy.long)

if strategy.position_size > 0
    strategy.exit(id="Long", comment="Stop Loss", stop=stopPrice)

if buyCondition[1]
    buyPrice := open

// exit positions
if sellCondition
    strategy.close(id="Long", comment="Exit")
    buyPrice := na

// draw
plot(buyPrice, color=color.lime, style=plot.style_linebr, title="Buy Price")
plot(stopPrice, color=color.red, style=plot.style_linebr, offset=-1, title="Failsafe Price")
plot(acceptableStopPrice, color=color.purple, style=plot.style_linebr, offset=-1, title="Acceptable Price")
plot(ma1, color=color.blue, title="Short-term EMA")
plot(ma2, color=color.orange, title="Long-term EMA")

bgcolor(strategy.position_size > 0 ? color.rgb(80, 80, 80, 50) : na, title="Long")

// alert to buy
if strategy.position_size == 0 and buyCondition
    alert("Can Buy", freq=alert.freq_once_per_bar_close)

if strategy.position_size > 0 and (sellCondition or stopCondition)
    alert("Can Sell", freq=alert.freq_once_per_bar_close)
